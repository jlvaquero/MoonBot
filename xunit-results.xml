<testsuite name="Mocha Tests" tests="148" failures="0" errors="0" skipped="0" timestamp="Fri, 31 Jan 2020 13:15:20 GMT" time="0.023">
<testcase classname="game rules cpu bits range 4-6" name="should return 4 when value is MIN_INTEGER" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 4 when value is -1" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 4 when value is 0" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 4 when value is 3" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 4 when value is 4" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 5 when value is 5" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 6 when value is 6" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 6 when value is 7" time="0"/>
<testcase classname="game rules cpu bits range 4-6" name="should return 6 when value is MAX_INTEGER" time="0"/>
<testcase classname="game rules get current player" name="should return player0 when turn 0" time="0"/>
<testcase classname="game rules get current player" name="should return player1 when turn 1" time="0"/>
<testcase classname="game rules determine player turn" name="should return true when playerturn 0 for player0 input" time="0.001"/>
<testcase classname="game rules determine player turn" name="should return false when playerturn 1 for player0 input" time="0"/>
<testcase classname="game rules determine player is joined in the game" name="should return true when player0 input" time="0"/>
<testcase classname="game rules determine player is joined in the game" name="should return false when player1 input" time="0"/>
<testcase classname="game rules determine no players left" name="should return false when playerList is not empty" time="0"/>
<testcase classname="game rules determine no players left" name="should return true when playerList is empty" time="0"/>
<testcase classname="game rules check if game reach to max unresolved objetives (6)" name="should return false if unresolved + bugsFound are 0" time="0"/>
<testcase classname="game rules check if game reach to max unresolved objetives (6)" name="should return false if unresolved + bugsFound are 5" time="0"/>
<testcase classname="game rules check if game reach to max unresolved objetives (6)" name="should return true if unresolved + bugsFound are 6" time="0"/>
<testcase classname="game rules check if game reach to max unresolved objetives (6)" name="should return true if unresolved + bugsFound are 7" time="0"/>
<testcase classname="game rules check no objetives left" name="should return true if no objetives and no currentObjetive" time="0"/>
<testcase classname="game rules check no objetives left" name="should return false if no objetives but currentObjetive" time="0"/>
<testcase classname="game rules check no objetives left" name="should return false if objetives queue has elments" time="0"/>
<testcase classname="game rules check no objetives left" name="should return false if objetives queue has elments" time="0"/>
<testcase classname="game rules check current player has enough energy for operation inc operation" name="should return true if energy left is 2" time="0"/>
<testcase classname="game rules check current player has enough energy for operation inc operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation inc operation" name="should return false if energy left is 1" time="0"/>
<testcase classname="game rules check current player has enough energy for operation dec operation" name="should return true if energy left is 2" time="0"/>
<testcase classname="game rules check current player has enough energy for operation dec operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation dec operation" name="should return false if energy left is 1" time="0"/>
<testcase classname="game rules check current player has enough energy for operation mov operation" name="should return true if energy left is 1" time="0"/>
<testcase classname="game rules check current player has enough energy for operation mov operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation mov operation" name="should return false if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation not operation" name="should return true if energy left is 1" time="0"/>
<testcase classname="game rules check current player has enough energy for operation not operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation not operation" name="should return false if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation rol operation" name="should return true if energy left is 1" time="0"/>
<testcase classname="game rules check current player has enough energy for operation rol operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation rol operation" name="should return false if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation ror operation" name="should return true if energy left is 1" time="0"/>
<testcase classname="game rules check current player has enough energy for operation ror operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation ror operation" name="should return false if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation or operation" name="should return true if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation or operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation or operation" name="should return false if energy left is 0" time="0"/>
<testcase classname="game rules check current player has enough energy for operation and operation" name="should return true if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation and operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation and operation" name="should return false if energy left is 0" time="0"/>
<testcase classname="game rules check current player has enough energy for operation xor operation" name="should return true if energy left is 0.5" time="0"/>
<testcase classname="game rules check current player has enough energy for operation xor operation" name="should return true if energy left is 3" time="0"/>
<testcase classname="game rules check current player has enough energy for operation xor operation" name="should return false if energy left is 0" time="0"/>
<testcase classname="game rules check objetive slots empty" name="should return true if unresolved is 0" time="0"/>
<testcase classname="game rules check objetive slots empty" name="should return true if unresolved is -1" time="0"/>
<testcase classname="game rules check objetive slots empty" name="should return false if unresolved is 1" time="0"/>
<testcase classname="game rules check if the current player is the last of the round" name="should return true on just one player and playerTurn 0" time="0"/>
<testcase classname="game rules check if the current player is the last of the round" name="should return true on 2 players and playerTurn 1" time="0"/>
<testcase classname="game rules check if the current player is the last of the round" name="should return false on 2 players and playerTurn 0" time="0"/>
<testcase classname="game rules check if some system error is present" name="should return false only if all errors are false" time="0"/>
<testcase classname="game rules check if some system error is present" name="should return true on any error present" time="0"/>
<testcase classname="game rules max energy range [3||2.5||2||1.5]" name="should return 1.5 on 1.5 input" time="0"/>
<testcase classname="game rules max energy range [3||2.5||2||1.5]" name="should return 2 on 2 input" time="0"/>
<testcase classname="game rules max energy range [3||2.5||2||1.5]" name="should return 2.5 on 2.5 input" time="0"/>
<testcase classname="game rules max energy range [3||2.5||2||1.5]" name="should return 3 on 3 input" time="0"/>
<testcase classname="game rules max energy range [3||2.5||2||1.5]" name="should fallback to default (3) less than 1.5" time="0"/>
<testcase classname="game rules max energy range [3||2.5||2||1.5]" name="should fallback to default (3) more than 3" time="0"/>
<testcase classname="game rules num bugs range 0-2" name="should return 0 on 0 input" time="0"/>
<testcase classname="game rules num bugs range 0-2" name="should return 1 on 1 input" time="0"/>
<testcase classname="game rules num bugs range 0-2" name="should return 2 on 2 input" time="0"/>
<testcase classname="game rules num bugs range 0-2" name="should return 2 on 3 input" time="0"/>
<testcase classname="game rules num bugs range 0-2" name="should return 0 on -1 input" time="0"/>
<testcase classname="game rules apply bug game card" name="should set bugsFound = 1 when bugsFound 0" time="0"/>
<testcase classname="game rules apply bug game card" name="should  set bugsFound = 2 when bugsFound 1" time="0"/>
<testcase classname="game rules apply reset register game card" name="should set requested register to 0" time="0"/>
<testcase classname="game rules apply reset register game card" name="should not set any other register to 0" time="0"/>
<testcase classname="game rules apply register error game card" name="should set register error to true" time="0"/>
<testcase classname="game rules apply operation error game card" name="should set register error to true" time="0"/>
<testcase classname="game rules apply fix error game card" name="should increase fixPending on any error present" time="0"/>
<testcase classname="game rules apply fix error game card" name="should increase fixPending on any error present" time="0"/>
<testcase classname="game rules apply fix error game card" name="should not increase fixPending because not error present" time="0"/>
<testcase classname="gameState behaviour obtainOperationCost behaviour" name="should return { cost: integer } if the operation exist" time="0"/>
<testcase classname="gameState behaviour checkGameWasStarted" name="should return {gameState} on started false" time="0"/>
<testcase classname="gameState behaviour checkGameWasStarted" name="should return null on started true" time="0"/>
<testcase classname="gameState behaviour checkGameWasNotStarted" name="should return {gameState} on started true" time="0"/>
<testcase classname="gameState behaviour checkGameWasNotStarted" name="should return null on started false" time="0"/>
<testcase classname="gameState behaviour checkAlreadyJoined" name="should return null if user already joined" time="0"/>
<testcase classname="gameState behaviour checkAlreadyJoined" name="should return {gameState} if user not joined" time="0"/>
<testcase classname="gameState behaviour checkAlreadyJoined" name="should return {gameState} if playerList is empty" time="0"/>
<testcase classname="gameState behaviour checkNotJoined" name="should return null if user is not joined" time="0"/>
<testcase classname="gameState behaviour checkNotJoined" name="should return {gameState} if user is joined" time="0.001"/>
<testcase classname="gameState behaviour checkNotJoined" name="should return null if playerList is empty" time="0"/>
<testcase classname="registerOperations with 4 bits inc operation" name="value 0 - it should return 1" time="0"/>
<testcase classname="registerOperations with 4 bits inc operation" name="value 15 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits dec operation" name="value 15 - it should return 14" time="0"/>
<testcase classname="registerOperations with 4 bits dec operation" name="value 0 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits mov operation" name="value 5 - it should return 5" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 0 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 1 - it should return 14" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 2 - it should return 13" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 3 - it should return 12" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 4 - it should return 11" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 5 - it should return 10" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 6 - it should return 9" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 7 - it should return 8" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 8 - it should return 7" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 9 - it should return 6" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 10 - it should return 5" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 11 - it should return 4" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 12 - it should return 3" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 13 - it should return 2" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 14 - it should return 1" time="0"/>
<testcase classname="registerOperations with 4 bits not operation" name="value 15 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="0 or 15 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="15 or 0 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="15 or 15 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="0 or 0 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="10 or 5 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="5 or 10 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="2 or 6 - it should return 6" time="0"/>
<testcase classname="registerOperations with 4 bits or operation" name="6 or 2 - it should return 6" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="0 and 15 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="15 and 0 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="15 and 15 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="0 and 0 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="10 and 5 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="15 and 1 - it should return 1" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="1 and 15 - it should return 1" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="15 and 14 - it should return 14" time="0"/>
<testcase classname="registerOperations with 4 bits and operation" name="14 and 15 - it should return 14" time="0"/>
<testcase classname="registerOperations with 4 bits xor operation" name="15 xor 15 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits xor operation" name="15 xor 0 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits xor operation" name="0 xor 15 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits xor operation" name="10 xor 10 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits xor operation" name="10 xor 5 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 0 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 15 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 1 - it should return 2" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 4 - it should return 8" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 8 - it should return 1" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 12 - it should return 9" time="0"/>
<testcase classname="registerOperations with 4 bits rol operation" name="valuie 14 - it should return 13" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 0 - it should return 0" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 15 - it should return 15" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 14 - it should return 7" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 8 - it should return 4" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 4 - it should return 2" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 13 - it should return 14" time="0"/>
<testcase classname="registerOperations with 4 bits ror operation" name="value 5 - it should return 10" time="0"/>
</testsuite>
